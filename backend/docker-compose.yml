services:
  nest-admin-web:
    # Use ARM64 compatible nginx image and build locally if needed
    image: nginx:alpine
    container_name: nest-admin-web
    volumes:
      - ./deploy/web:/etc/nginx/conf.d
    ports:
      - '80:80'
    restart: always
    networks:
      - nest_admin_net
  mysql:
    # Use ARM64 compatible MySQL image
    image: mysql:8.0
    platform: linux/arm64
    container_name: nest-admin-mysql
    restart: always
    environment:
      - MYSQL_HOST=127.0.0.1
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=nest_admin
      - MYSQL_USERNAME=root
      - MYSQL_PASSWORD=123456
      - MYSQL_ROOT_PASSWORD=123456
    ports:
      - '3306:3306'
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci  --bind-address=0.0.0.0 # 设置utf8字符集
    volumes:
      - ./__data/mysql/:/var/lib/mysql/ # ./__data/mysql/ 路径可以替换成自己的路径
      - ./deploy/sql/:/docker-entrypoint-initdb.d/ # 初始化的脚本，若 ./__data/mysql/ 文件夹存在数据，则不会执行初始化脚本
    networks:
      - nest_admin_net

  redis:
    # Redis alpine already supports ARM64
    image: redis:7-alpine
    platform: linux/arm64
    container_name: nest-admin-redis
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --requirepass 123456
    networks:
      - nest_admin_net

  nest-admin-server:
    # Force local build for ARM64 compatibility
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - PROJECT_DIR=${PROJECT_DIR}
    # Remove the pre-built image reference
    # image: buqiyuan/nest-admin-server:stable
    container_name: nest-admin-server
    restart: always
    env_file:
      - .env
      - .env.development
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - '${APP_PORT}:${APP_PORT}'
    volumes:
      - ./logs/:${PROJECT_DIR}/logs/ # ./logs 日志文件挂载到容器外部
    # 当前服务启动之前先要把depends_on指定的服务启动起来才行
    depends_on:
      - mysql
      - redis
    networks:
      - nest_admin_net

networks:
  nest_admin_net:
    name: nest_admin_net
